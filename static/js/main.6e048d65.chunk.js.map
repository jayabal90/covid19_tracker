{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19-analysis.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","chartView","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covid19Image","alt","footer","getFullYear","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e048d65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3HKQa\",\"card\":\"Cards_card__1HD2Y\",\"infected\":\"Cards_infected__2z4Y7\",\"recovered\":\"Cards_recovered__1I1bk\",\"deaths\":\"Cards_deaths__1bOzO\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'; \r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ( {data :{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return \"Loading...\";\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                       <Typography variant=\"h5\">\r\n                       <CountUp start = {0} end ={confirmed.value} duration={2.5} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of active cases of Covid-19</Typography>\r\n                   </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                       <Typography variant=\"h5\">\r\n                       <CountUp start = {0} end ={recovered.value} duration={2.5} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\r\n                   </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                   <CardContent>\r\n                       <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                       <Typography variant=\"h5\">\r\n                       <CountUp start = {0} end ={deaths.value} duration={2.5} separator=\",\"/>\r\n                       </Typography>\r\n                       <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                       <Typography variant=\"body2\">Number of deaths caused by Covid-19</Typography>\r\n                   </CardContent>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Cards\r\n","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n\r\n    let changeableUrl= url;\r\n    if(country===\"global\" || country===\"undefined\"){\r\n        changeableUrl=url;\r\n    }\r\n    else if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n        const {data: {confirmed,recovered,deaths,lastUpdate}  } = await axios.get(changeableUrl);\r\n        return {confirmed,recovered,deaths,lastUpdate}\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try {\r\n        const {data }  = await axios.get(`${url}/daily`);\r\n        const modifiedData=data.map((dailyData)=>({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate\r\n        }))    \r\n        return modifiedData;\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async() =>{\r\n  try {\r\n      const {data : {countries}}=await axios.get(`${url}/countries`);\r\n      return countries.map((country)=> country.name)\r\n  } catch (error) {\r\n      \r\n  }  \r\n} ","import React, {useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths},country}) => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n    useEffect(() =>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(<Line\r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets : [{\r\n                      data : dailyData.map(({confirmed})=>confirmed),\r\n                      label: 'Infected',\r\n                      borderColor: '#3333ff',\r\n                      fill : true,\r\n                }, {\r\n                    data : dailyData.map(({deaths})=>deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor : 'rgba(255,0,0,0.5)',\r\n                    fill : true,  \r\n                }]\r\n            }}\r\n        />) :null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(\r\n            <Bar\r\n                data = {{\r\n                    labels : ['Infected', 'Recovered','Deaths'] ,\r\n                    datasets :[{\r\n                        label : 'People',\r\n                        backgroundColor : [\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                        data : [confirmed.value,recovered.value,deaths.value]\r\n                    }] \r\n                }}\r\n                options ={{\r\n                    legend : {display: false},\r\n                    title : {display: true, text:`Current state in ${country}`}\r\n                }}\r\n            />\r\n        ): null\r\n    )\r\n\r\n    let chartView;\r\n    if(country===\"undefined\"){\r\n        chartView=lineChart;\r\n    }\r\n    else if(country===\"global\"){\r\n        chartView=lineChart;\r\n    }else if(country){\r\n        chartView=barChart;\r\n    }else{\r\n        chartView=lineChart;\r\n    }   \r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n          { chartView}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries , setFetchedCountries] = useState([])\r\n    useEffect(() => {\r\n        const fetchAPI = async ( ) => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n    return (    \r\n        <FormControl className={styles.formControl} >\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                    {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker\r\n","import React, { Component } from 'react'\r\n\r\n\r\nimport {Cards, Chart, CountryPicker} from './components'\r\n\r\nimport styles from './App.module.css';\r\nimport {fetchData } from './api';\r\n\r\nimport covid19Image from './images/covid19-analysis.png'\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        data :{},\r\n        country :''\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData()\r\n        this.setState({data:fetchedData});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        // fetch the data \r\n        const fetchedData = await fetchData(country);\r\n        // set the data\r\n        this.setState({data:fetchedData,country:country});\r\n    }\r\n\r\n    render() {\r\n        const {data,country} = this.state\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={covid19Image}  alt=\"covid-19\" />\r\n                <Cards data={data} country={country} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country} />\r\n               <footer className={styles.footer}> &copy; {new Date().getFullYear()} Design & Developed by Jayabal</footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2cIv3\",\"image\":\"App_image__2Nnhm\",\"footer\":\"App_footer__27G4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2Rd2g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1bbM0\"};","module.exports = __webpack_public_path__ + \"static/media/covid19-analysis.01c1107f.png\";"],"sourceRoot":""}